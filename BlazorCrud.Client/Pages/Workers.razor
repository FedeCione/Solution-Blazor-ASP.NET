@page "/empleados"

@using BlazorCrud.Shared;
@using CurrieTechnologies.Razor.SweetAlert2;
@using BlazorCrud.Client.Services;

@inject SweetAlertService Swal;
@inject IWorkerService workerService;

<h3>Empleados</h3>

<a class="btn btn-success btn-sm mb-3" href="empleado">Nuevo Empleado</a>

<table class="table">
	<thead>
		<tr>
			<th>Nombre Completo</th>
			<th>Departamento</th>
			<th>Sueldo</th>
			<th>Fecha de Contrato</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@if (listWorker == null)
		{
			<tr>
				<td colspan="5" align="center">
					<img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
				</td>
			</tr>
		} 
		else
		{
			@foreach(var item in listWorker)
			{
				<tr>
					<td>@item.FullName</td>
					<td>@item.Department.Name</td>
					<td>@item.Salary</td>
					<td>@item.ContractDate.ToString("dd/MM/yyyy")</td>
					<td>
						<a class="btn btn-primary btn-sm" href="empleado/@item.IdWorker">
							<Icon Name="IconName.PencilFill"></Icon>
						</a>
						<button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Delete(item.IdWorker))">
							<Icon Name="IconName.Trash3Fill"></Icon>
						</button>
					</td>
				</tr>
			}
		}
	</tbody>
</table>

@code {

	List<WorkerDTO>? listWorker = null;

	protected override async Task OnInitializedAsync()
	{
		listWorker = await workerService.List();

	}

	private async Task Delete(int id)
	{
		Console.WriteLine("ID: " + id);
		var result = await Swal.FireAsync(new SweetAlertOptions
		{
			Title = "Eliminar empleado",
			Text = "Deseas eliminar el empleado?",
			Icon = SweetAlertIcon.Question,
			ShowCancelButton = true
		});

		if (result.IsConfirmed)
		{
			var deleted = await workerService.Delete(id);

			if(deleted)
			{
				listWorker = listWorker!.FindAll(e => e.IdWorker != id);
			}
		}
	}

}
